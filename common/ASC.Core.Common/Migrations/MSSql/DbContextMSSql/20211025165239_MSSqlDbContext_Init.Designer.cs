// <auto-generated />
using System;
using ASC.Core.Common.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASC.Core.Common.Migrations.MSSql.DbContextMSSql
{
    [DbContext(typeof(MSSqlDbContext))]
    [Migration("20211025165239_MSSqlDbContext_Init")]
    partial class MSSqlDbContext_Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASC.Core.Common.EF.Model.DbipLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddrType")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("addr_type")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("city")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("country")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<string>("District")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("district")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<int>("GeonameId")
                        .HasColumnType("int")
                        .HasColumnName("geoname_id");

                    b.Property<string>("IPEnd")
                        .IsRequired()
                        .HasMaxLength(39)
                        .HasColumnType("nvarchar(39)")
                        .HasColumnName("ip_end")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<string>("IPStart")
                        .IsRequired()
                        .HasMaxLength(39)
                        .HasColumnType("nvarchar(39)")
                        .HasColumnName("ip_start")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<long>("Latitude")
                        .HasColumnType("bigint")
                        .HasColumnName("latitude");

                    b.Property<long>("Longitude")
                        .HasColumnType("bigint")
                        .HasColumnName("longitude");

                    b.Property<int>("Processed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("processed");

                    b.Property<string>("StateProv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("stateprov")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<string>("TimezoneName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("timezone_name")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<double>("TimezoneOffset")
                        .HasColumnType("float")
                        .HasColumnName("timezone_offset");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("zipcode")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.HasKey("Id");

                    b.HasIndex("IPStart")
                        .HasDatabaseName("ip_start");

                    b.ToTable("dbip_location");

                    b.HasCheckConstraint("constraint_addr_type", "[addr_type] = 'ipv4' or [addr_type] = 'ipv6'");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.MobileAppInstall", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_email")
                        .UseCollation("LATIN1_GENERAL_100_CI_AS_SC_UTF8");

                    b.Property<int>("AppType")
                        .HasColumnType("int")
                        .HasColumnName("app_type");

                    b.Property<DateTime>("LastSign")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_sign");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("registered_on");

                    b.HasKey("UserEmail", "AppType")
                        .HasName("mobile_app_install_pkey");

                    b.ToTable("mobile_app_install");
                });

            modelBuilder.Entity("ASC.Core.Common.EF.Model.Regions", b =>
                {
                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
